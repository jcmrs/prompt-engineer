Use repo: github.com/jcmrs/prompt-engineer; Instruction file: docs/jules_prompt_complete.txt; Task: reset_and_reimplement; UndoBranches: ["jules/scaffold-fixes","jules/scaffold-initial","copilot/scaffoldinitial-pea"]; EnsureNoPushToMain: true; CreateBranch: jules/scaffold-initial; PushBranch: true; CreateDraftPR: true; RunFormatting: true; RunTests: true; MockEnv: PEA_GEMINI_MOCK=true; HardConstraints: ["NO_API_KEYS","CI_USE_MOCK"]; Behavior: Abort any partial local/apply changes from prior runs (do NOT modify main); if needed, reset working tree to origin/main; then implement the full merged instruction in docs/jules_prompt_complete.txt, make small conventional commits, run gofmt -w . go vet ./... go mod tidy, build ./scripts/gemini-mock, run unit + integration tests with PEA_GEMINI_MOCK=true, push branch jules/scaffold-initial, open a DRAFT PR to main with required PR body and raw logs, and return the exact JSON report described in docs/jules_prompt_complete.txt (changed_files, commits, diffs, build_and_fmt_log, test_output, todo, pr_url, short_summary). If any command cannot be executed, include the exact attempted command and raw stderr/stdout in the "todo" array. Do NOT mark the PR ready unless CI passes.
